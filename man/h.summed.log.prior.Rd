% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ggdmc_bayes.R
\name{h.summed.log.prior}
\alias{h.summed.log.prior}
\alias{h.log.posterior.dmc}
\alias{assign.pp}
\alias{log.posterior.dmc}
\alias{log.likelihood}
\title{Hierarchical prior, likelihoods and posterior}
\usage{
h.summed.log.prior(pp, pp.prior)

h.log.posterior.dmc(ps, p.prior, pp, pp.prior)

assign.pp(pp, p.prior)

\method{log}{posterior.dmc}(p.vector, p.prior, data, min.like = 1e-10)

\method{log}{likelihood}(p.vector, dmi, min.like = 1e-10)
}
\description{
\code{h.log.likelihood.dmc} computes log-likelihood of subject parameters
ps under population distribuiton p.prior
}
\details{
\code{h.log.posterior.dmc} computes log-likelihood of subject parameters ps
under population distribution p.prior,given population parameters pp (phi)
with priors pp.prior
}
\examples{
pp <- list( c(1.80, -0.86, 6.47, 0.64, 0.28, 0.14, 0.79),
            c(0.57, 1.40, 1.46, 0.17, 1.65, 0.46, 0.60))

pop.mean  <- c(a=1.15, v.f1=1.25, v.f2=1.85, z=0.55, sz=0.15, sv=0.32, t0=0.25)
pop.scale <- c(a=0.10, v.f1=.8,   v.f2=.5,   z=0.1,  sz=0.05, sv=0.05, t0=0.05)
pop.prior <- ggdmc::prior.p.dmc(
  dists = rep("tnorm", length(pop.mean)),
  p1=pop.mean,
  p2=pop.scale,
  lower=c(0,-5, -5, 0, 0,   0, 0),
  upper=c(5, 7,  7, 1, 0.5, 2, 2))

p.prior <- ggdmc:::prior.p.dmc(
dists = c("tnorm","tnorm","tnorm","tnorm","tnorm", "tnorm", "tnorm"),
     p1=pop.mean,
     p2=pop.scale*5,
     lower=c(0,-5, -5, 0, 0, 0, 0),
     upper=c(5, 7,  7, 2, 2, 2, 2))

mu.prior <- ggdmc:::prior.p.dmc(
  dists = c("tnorm","tnorm","tnorm","tnorm","tnorm", "tnorm", "tnorm"),
  p1=pop.mean,
  p2=pop.scale*5,
  lower=c(0,-5, -5, 0, 0, 0, 0),
  upper=c(5, 7,  7, 2, 2, 2, 2))

sigma.prior <- ggdmc:::prior.p.dmc(
  dists = rep("beta", length(p.prior)),
  p1=c(a=1, v.f1=1,v.f2 = 1, z=1, sz=1, sv=1, t0=1),p2=c(1,1,1,1,1,1,1),
  upper=c(2,2,2,2,2, 2, 2))

pp.prior <- list(mu.prior, sigma.prior)

ggdmc:::h.summed.log.prior(pp, pp.prior)

## LBA model

pop.mean <- c(A=.4, B.r1=.6, B.r2=.8, t0=.3,
  mean_v.f1.true=1.5, mean_v.f2.true=1, mean_v.f1.false=0,
  mean_v.f2.false=0, sd_v.true = .25)
pop.scale <-c(A=.1, B.r1=.1, B.r2=.1, t0=.05,
  mean_v.f1.true=.2, mean_v.f2.true=.2, mean_v.f1.false=.2,
  mean_v.f2.false=.2, sd_v.true = .1)

p.prior <- ggdmc:::prior.p.dmc(
  dists = rep("tnorm", 9),
  p1 = pop.mean,
  p2 = pop.scale,
  lower = c(0,0,0, .1, NA,NA,NA,NA,0),
  upper = c(NA,NA,NA, 1, NA,NA,NA,NA,NA))

dat <- ggdmc:::h.simulate.dmc(model, ns=8, n=250, p.prior=pop.prior)
ps <- round( attr(dat, "parameters"), 2)

pp <- list( c(1.80, -0.86, 6.47, 0.64, 0.28, 0.14, 0.79, 0.2, 0.3),
             c(0.57, 1.40, 1.46, 0.17, 1.65, 0.46, 0.60, 0.3, 0.1))
ggdmc:::h.log.likelihood.dmc(ps, pp, p.prior)

res <- assign.pp(pp, prior)

}
