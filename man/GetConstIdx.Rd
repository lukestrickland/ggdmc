% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{GetConstIdx}
\alias{GetConstIdx}
\title{Whether a hyper-prior distribution is set constant}
\usage{
GetConstIdx(ppprior)
}
\arguments{
\item{ppList}{a pp.prior. First element is a location list and second
element is a scale list.}
}
\value{
\code{isConstant} gives a npar x 2 matrix; \code{testHyper} gives
a SEXP vector
}
\description{
Check if a prior distribution for a location and scale parameter is set
constant. \code{testHyper} checks if the parameter names in location and
in scale match.
}
\examples{
mu.prior <- ggdmc::BuildPrior(
        dists = rep("tnorm", 9),
        p1    = pop.mean,
        p2    = c(1,   1,  1,  1,   2,  2,  2, 2,  1),
        lower = c(0,   0,  0, .01, NA, NA, NA, NA, 0),
        upper = c(NA, NA, NA,  NA, NA, NA, NA, NA, NA))

sigma.prior <- ggdmc::BuildPrior(
        dists = rep("beta", length(p.prior)),
        p1    = c(A = 1, B.r1 = 1, B.r2 = 1, t0 = 1,
                  mean_v.d1.true  = 1,
                  mean_v.d2.true  = 1,
                  mean_v.d1.false = 1,
                  mean_v.d2.false = 1,
                  sd_v.true = 1),
        p2    = rep(1, 9))
pp.prior <- list(mu.prior, sigma.prior)

test1 <- GetConstIdx(pp.prior)
test2 <- lapply(pp.prior,function(x){
   lapply(x,function(y){attr(y,"dist")=="constant"})})

}
